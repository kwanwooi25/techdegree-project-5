// BEM selectors
@mixin e($element) {
	&__#{$element} {
    @content;
  }
}
@mixin m($modifier) {
  &--#{$modifier} {
    @content;
  }
}

// media queries
@mixin mq($breakpoint) {
  @if $breakpoint == "sm" {
    @media (min-width: $break-sm) and (max-width: $break-md) {
      @content;
    }
  }
  @else if $breakpoint == "md" {
    @media (min-width: $break-md + 1) {
      @content;
    }
  }
  @else if $breakpoint == "lg" {
    @media (min-width: $break-lg) {
      @content;
    }
  }
   @else {
   	@error "'#{$breakpoint}' is not a valid breakpoint. "
  }
};

// Grid Columns
@mixin grid-columns {
  @for $i from 1 through $grid-col-count {
    $context: grid-context($grid-col-width, $grid-col-count ,$grid-gutter-width) !global;
    $target: ($grid-col-width * $i) + ($grid-gutter-width * ($i - 1));

    // Generate column modifier classes
    &--#{$i} {
      width: percentage($target / $context);
    }
  }
}

// Grid Colors
@mixin grid-colors {
	@for $i from 1 through $grid-col-count {
		&--#{$i}.theme__colors {
			color: $white;
			background-color: nth($grid-colors, $i);
		}
	}
}
